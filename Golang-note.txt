package main	
	//package 声明文件属于哪个包  main函数必须放在main包  编译生成可执行文件 
	
import (      //引入包时用文件夹的路径   一个文件夹只能有一个包  
	"Aaa/qqq"    
	_ "fmt"   // _ 忽略这个包    
)        
	函数外只能放标识符(变量 常量 函数 类型)的声明，必须以"关键字"开头     
		      
func main(){  	 //入口函数     
## 声明变量  
	初始值为空  非全局变量声明之后必须使用  严格区分大小写  
	var A int       
	var s1="hello"    //类型推导
	var s2 int = 1
	var s3 = int8(2)  //强制转换  
	s4:=12    	      //省略var关键字  只能在函数内使用 
	s5:=int8(2)
	
	//批量声明
	var(
		A string
		B int
		C bool
	)  
	var a,b,c =0,1,2 	
//变量作用域 
	全局变量可以在整个包中使用，首字母大写可以在整个程序中使用（包名.变量名）
	局部变量只在本函数内生效  
	//语句块中的作用域 
	if判断、for循环、switch 等语句中定义的变量只在本语句中生效   
	若变量名相同，编译器会采用就近原则，优先使用小范围内的变量
//变量名格式    
	推荐使用小驼峰
	var studentName string //小驼峰 
	var StudentName string //大驼峰 
	var student_name string//下划线 
//定义常量  
	定义之后不能修改 不会改变 
	const pi=3.1415926
	const (
		s1=100
		s2    //默认和上一行值一样 
		s3
	) 
    //iota      计数器
	const(
		b1=iota  //iota在const出现时被置为0 每新增一行常量声明就加一
		b2       //1
		_        //2
		b3       //3
	) 
	//定义数量级
	const(
		_ =iota        //iota=0
		KB=1<<(10*iota)//iota=1 二进制1左移10*1位 2^10 10000000000 1024 B 
		MB=1<<(10*iota)//iota=2 二进制1左移10*2位 2^20   1024*1024 
		GB=1<<(10*iota)
		TB=1<<(10*iota)
	) 
## 输入与输出 
	//输出语句 
	fmt.Print(A) 直接输出要打印的内容 
	fmt.Printf("name:%s\n",A)  %s:占位符 字符串类型  \n:换行符 
    fmt.Println(a) 末尾输出一个换行符 
	//输入语句 
	fmt.Scan(&a,&b)  //键盘输入时以空格作为分隔符  
	fmt.Scanf("%d",&a) 
	fmt.Scanln(&a)  
	//格式化 
	s=fmt.Sprint (A,"你好") //返回格式化后的字符串 
	s=fmt.Sprintf("A=%d",A)
## 基本数据类型
	//值类型：    通常存放在栈区中
	int  float  bool  string  数组  结构体    
	//引用类型：  通常存放在堆区中  没有变量引用存放的地址时由GC回收 
	指针  slice切片  map  chan管道  interface接口   
	引用类型默认值为nil 
//占位符:
	fmt.Printf("%T\n",A)//用 unsafe.Sizeof() 可以返回变量占用的字节数	 
	%T 变量的类型 
	%v 默认类型值（万能）%#v 标注变量的类型
	%b 二进制  %d十进制  %o八进制  %x十六进制 
	%f 浮点数  %9.2f  
	%c 字符 （数对应的unicode码的符号） 
	%s 字符串
	%q 带引号的字符/字符串的值，必要时采用安全的转义表示
	%p 内存地址（指针）  & ：取(变量)地址 
	%t 布尔值 
	%U Unicode格式:U+1234 等价于 U+%04X 
	%% 百分号
	//字符串转义符 
	\	\r 回车符 \n 换行符 \t 制表符（Tab键） \"" 双引号 \\ 反斜杠 

//自定义类型与类型别名
	定义之后go认为是新的数据类型，不可直接相互赋值，需要强转 
	type a int	//自定义类型  打印类型：main.a  这里认为a和int不是一个类型   但是如果是自定义的函数类型，则认为是同一个类型 
	type b=int  //类型别名 	  打印类型：int     如byte是uint8的类型别名 而rune是int32 
	
//整形      
	int //带符号整型    
